name: CI
on:
  - push
  - pull_request
permissions: {}
jobs:
  github-runner:
    permissions:
      contents: write
    name: ${{ matrix.platform }} - Node.js ${{ matrix.nodejs_version_major }} ${{ matrix.prebuild && '- prebuild' }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_arch: x64
            nodejs_version: "^20.3.0"
            nodejs_version_major: 20
            platform: linux-x64
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_arch: x64
            nodejs_version: "^22.9.0"
            nodejs_version_major: 22
            platform: linux-x64

          - os: ubuntu-24.04
            container: node:20-alpine3.18
            nodejs_version_major: 20
            platform: linuxmusl-x64
          - os: ubuntu-24.04
            container: node:22-alpine3.20
            nodejs_version_major: 22
            platform: linuxmusl-x64

          - os: macos-14
            nodejs_arch: arm64
            nodejs_version: "^20.3.0"
            nodejs_version_major: 20
            platform: darwin-arm64
          - os: macos-14
            nodejs_arch: arm64
            nodejs_version: "^22.9.0"
            nodejs_version_major: 22
            platform: darwin-arm64

    steps:
      - name: Dependencies (Rocky Linux glibc)
        if: contains(matrix.container, 'rockylinux')
        run: |
          dnf install -y gcc-toolset-11-gcc-c++ make git python3.12 fontconfig google-noto-sans-fonts
          echo "/opt/rh/gcc-toolset-11/root/usr/bin" >> $GITHUB_PATH
      - name: Dependencies (Linux musl)
        if: contains(matrix.container, 'alpine')
        run: apk add build-base git python3 font-noto vips vips-heif vips-jxl libheif vips-dev --update-cache
      - name: Dependencies (Python 3.11 - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Dependencies (Node.js)
        if: "!contains(matrix.platform, 'linuxmusl')"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}
          architecture: ${{ matrix.nodejs_arch }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install --build-from-source
      - name: Test
        run: npm test
      - name: Test packaging
        run: |
          npm run package-from-local-build
          npm pkg set "optionalDependencies.@studiosnack/sharp-${{ matrix.platform }}=file:./npm/${{ matrix.platform }}"
          npm run clean
          npm install --ignore-scripts
          npm test
      - name: Prebuild
        if: matrix.prebuild && startsWith(github.ref, 'refs/tags/')
        env:
          prebuild_upload: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e "require('fs').cpSync('package.json', 'src/package.json')"
          cd src
          npx prebuild
